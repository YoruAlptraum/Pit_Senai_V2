<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mns1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>34, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvUIWALdAHgTCRA9BzEcBZcxHAGbMRwBmzEcAZsxHAGbMRwBmzEcAZsxH
        AGbMRwBmzEcAZsxHAGbMRwBmzEcAZsxHAGbMRwBmzEcAZsxHAGbMRwBmzEcAZsxHAGbMRwBmzEcBZcJD
        D0G3Px4EvUEWAAAAAAAAAAAAAAAAAAAAAADDQw8A0kkAEbI8K9GCKHj/gCd7/4Ane/+AJ3v/gCd7/4An
        e/+AJ3v/gCd7/4Ane/+AJ3v/gCd7/4Ane/+AJ3v/gCd7/4Ane/+AJ3v/gCd7/4Ane/+AJ3v/gCd7/4An
        e/+CKHj/sjwr0dJJABHDQw8AAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqDg5604Szf9UHdP/WibV/1ol
        1f9aJdX/WiXV/1ol1f9aJdX/WiXV/1ol1f9aJdX/WiXV/1ol1f9aJdX/WiXV/1ol1f9aJdX/WiXV/1ol
        1f9aJtX/VB3T/04Szf+oODnr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxOABSpODjrTA7I/7CV
        6P/28vz/8ez7//Hs+//x7Pv/8ez7//Hs+//x7Pv/8ez7//Hs+//x7Pv/8ez7//Hs+//x7Pv/8ez7//Hs
        +//x7Pv/8ez7//by/P+wlej/TA7I/6k4OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4
        OOtMDsj/uKDq////////////////////////////////////////////////////////////////////
        /////////////////////////////7ig6v9MDsj/qTg469xOABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVE
        CgDcTgAUqTg460wOyP+4oOr/////////////////////////////////////////////////////////
        ////////////////////////////////////////uKDq/0wOyP+pODjr3E4AFMVECgAAAAAAAAAAAAAA
        AAAAAAAAxUQKANxOABSpODjrTA7I/7ig6v//////////////////////////////////////////////
        //////////////////////////////////////////////////+4oOr/TA7I/6k4OOvcTgAUxUQKAAAA
        AAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4OOtMDsj/uKDq////////////////////////////////////
        /////////////////////////////////////////////////////////////7ig6v9MDsj/qTg469xO
        ABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqTg460wOyP+4oOr/////////////////////////
        ////////+vHs//ru6P////7/////////////////////////////////////////////////uKDq/0wO
        yP+pODjr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxOABSpODjrTA7I/7ig6v//////////////
        //////////////vz7v/gnH3/2INc//Xg1///////////////////////////////////////////////
        //+4oOr/TA7I/6k4OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4OOtMDsj/uKDq////
        ///////////////////88/D/4Jp7/8hMFf/FRAr/1XdO//bi2v//////////////////////////////
        /////////////7ig6v9MDsj/qTg469xOABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqTg460wO
        yP+4oOr/////////////////+/Ht/+Caev/HSxP/xUUL/8VFC//FRAr/1XdO//bg1///////////////
        ////////////////////////uKDq/0wOyP+pODjr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxO
        ABSpODjrTA7I/7ig6v////////////rw6//gmnr/x0wV/8VEC//We1L/3I9t/8hOF//FRAr/1XhP//Xe
        1f////////////////////////////////+4oOr/TA7I/6k4OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAA
        AADFRAoA3E4AFKk4OOtMDsj/uKDq////////////89jL/89jMv/FQwj/1ntT//Xg1//89PL/46OH/8dM
        Ff/FRAr/1HdN//Xf1f///////////////////////////7ig6v9MDsj/qTg469xOABTFRAoAAAAAAAAA
        AAAAAAAAAAAAAMVECgDcTgAUqTg460wOyP+4oOr////////////9+ff/6LSc/9qHYv/14df/////////
        ///79fH/4qOG/8dMFP/FRAr/1HVK//bh1///////////////////////uKDq/0wOyP+pODjr3E4AFMVE
        CgAAAAAAAAAAAAAAAAAAAAAAxUQKANxOABSpODjrTA7I/7ig6v/////////////////++/r//Pfz///+
        /v/////////////////89fH/46KF/8hNFv/FQgj/1XZN//bf1v////////////////+4oOr/TA7I/6k4
        OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4OOtMDsj/uKDq////////////////////
        ///////////////////////////////////89PH/4qKF/8hMFf/FRAr/1XhO//bj2v///////////7ig
        6v9MDsj/qTg469xOABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqTg460wOyP+4oOr/////////
        ///////////////////////////////////////////////////78+//46OG/8dMFP/SbkH/9d7U////
        ////////uKDq/0wOyP+pODjr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxOABSpODjrTA7I/7ig
        6v/////////////////////////////////////////////////////////////////88/D/6beh//LV
        x////v7///////////+4oOr/TA7I/6k4OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4
        OOtMDsj/uKDq////////////////////////////////////////////////////////////////////
        ///+/f3///7+/////////////////7ig6v9MDsj/qTg469xOABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVE
        CgDcTgAUqTg460wOyP+4oOr/////////////////////////////////////////////////////////
        ////////////////////////////////////////uKDq/0wOyP+pODjr3E4AFMVECgAAAAAAAAAAAAAA
        AAAAAAAAxUQKANxOABSpODjrTA7I/7ig6v//////////////////////////////////////////////
        //////////////////////////////////////////////////+4oOr/TA7I/6k4OOvcTgAUxUQKAAAA
        AAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4OOtMDsj/uKDq////////////////////////////////////
        /////////////////////////////////////////////////////////////7ig6v9MDsj/qTg469xO
        ABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqTg460wOyP+4oOr/////////////////////////
        ////////////////////////////////////////////////////////////////////////uKDq/0wO
        yP+pODjr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxOABSpODjrTA7I/7ig6v//////////////
        ///78/D/7MSx/+ixmf/osZn/6LGZ/+ixmf/osZn/6LGZ/+ixmf/osZn/7cSx//vz8P//////////////
        //+4oOr/TA7I/6k4OOvcTgAUxUQKAAAAAAAAAAAAAAAAAAAAAADFRAoA3E4AFKk4OOtMDsj/uKDq////
        /////////////+e1nf/KeE7/x39Z/8eAWv/Hf1n/x39Y/8d/WP/Hf1n/x4Ba/8d/Wf/KeE7/6LWe////
        /////////////7ig6v9MDsj/qTg469xOABTFRAoAAAAAAAAAAAAAAAAAAAAAAMVECgDcTgAUqTg460wO
        yP+wlej/9vL8//Hs+//y8P//14lt/8iQcP/Ls5//y7Gb/8qTcv/Haz3zx2s988qTcv/LsZv/y7Of/8iQ
        cP/XiW3/8vD///Hs+//28vz/sJXo/0wOyP+pODjr3E4AFMVECgAAAAAAAAAAAAAAAAAAAAAAxUQKANxO
        ABSoODnrThLN/1Qd0/9aJtX/WiXV/1ck2v+aOF3/zZt4/8u2ov/KmHr/x1on28NDB1bCQwdWxlso28qY
        ev/LtqL/zZt4/5o4Xf9XJNr/WiXV/1om1f9UHdP/ThLN/6g4OevcTgAUxUQKAAAAAAAAAAAAAAAAAAAA
        AADDQw8A0kkAEbI8K9GCKHj/gCd7/4Ane/+AJ3v/fiZ+/6k5OP/KdUj/yYVh/8hqPv/HQwuE0y0ABLBE
        AAXDRQuFx2o+/8mFYf/KdUj/qTk4/34mfv+AJ3v/gCd7/4Ane/+CKHj/sjwr0dJJABHDQw8AAAAAAAAA
        AAAAAAAAAAAAAL5BFgC5Px4Ew0MPQsxHAGXMRwBmzEcAZsxHAGbMRwBmyEUGZsU/BGbFPgFjxkIGl8ZE
        CrrIQQo6xkIKO8VFCrvGQgaXxT4BY8U/BGbIRQZmzEcAZsxHAGbMRwBmzEcAZsxHAGXDRA9CuUAeBL5C
        FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMhF
        BwDJRQYSxUQJmMZFCtXGRQrVxUQJl8hHCBLHRggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB//4H/8=
</value>
  </data>
</root>